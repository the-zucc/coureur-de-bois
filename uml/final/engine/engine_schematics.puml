@startuml
class LÈgende{
    - private
    # protected
    + public
    {abstract} abstract
    {static} static
}
'javafx, la base de l'engin graphique du programme
package javafx.stage{
    class Stage
    'note bottom:fenùtre\nd'application
}

package javafx.scene #ffffff{
    class Scene
    'note top:graphe de scùne qui\npossùde un noeud\nracine qui possùde\ndes enfants
    Stage <-- Scene
    
    
    abstract class Node{

    }
    'note:classe\ngùnùrique\npour\nles\nnoeuds
    Parent "1" *-- "n" Node
    ':"1..*"

    class SubScene
    'note bottom:graphe de scËne\nqui agit comme\nun noeud 2D au sein\nd'une scËne, mais qui\nest aussi une scËne\nen soi.
    SubScene --|> Node
    SubScene --|> Scene
    SubScene <-- Parent

    abstract class Parent
    'note left:indique\nque le\nnoeud\na des\nenfants 
    Parent --|>Node
    Scene <-- Parent
    
    class Group
    'note top:utilisù dans\nle contexte\nactuel, sert\nsimplement\nù dùclarer\nles positions\navec des\ncoordonnùes\nX,Y,Z 
    Group --|> Parent
}

package javafx.geometry{
    class Point3D
}
package javafx.application{
    class Application{

    }
    Application "1" *-- "n" Stage
    ': "une application\npeut possùder\nplusieurs fenùtres"
}

'package de l'application
package app{
    skinparam stereotypeCBackgroundColor<<Singleton>> #FF7700
    class Model<<Singleton>>{
        - {static} Instance:Model
        + {static}getInstance():Model
    }
    class UI<<Singleton>>{
        - {static} Instance:Model
        + {static}getInstance():Model
    }
    UI --|> Scene
    class GameScene<<Singleton>>{
        - {static} Instance:GameScene
        + {static}getInstance():GameScene
    }
    'note bottom:pour permettre de superposer\ndu rendu 3D ‡ du rendu 2D,\nune scËne en 2D est nÈcessaire.\nOn ajoute simplement un noeud\nqui sera une <i>SubScene</i> ‡ la scËne\n2D. Elle sera manipulÈe comme\nun objet 2D, mais aura les fonctionnalitÈs\nd'une scËne en 3D (donc l'ajout\nd'enfants 3D sera possible)
    GameScene --|> SubScene
    GameScene <-- Model
    UI <-- GameScene
    class Controller{
        - {static}applicationWindow:javafx.stage.Stage
        + {static}getApplicationWindow():javafx.stage.Stage
    }
    'note :la classe <i>Controller\ninitialise les Singletons\ndans le bon ordre
    Controller <-- UI
    Controller <-- GameScene
    ': "initialise"
    Controller <-- Model
    Controller --|> Application
}
package visual{
    package visual.component{
        class Component{
            - id:String
            + Component(String):Component
            + getId():String
        }
        Component "n" --* "1" GameScene
        Component --|> Group
    }
    package visual.info{
        class 2DComponent{
            - visible:boolean
            + isVisible():boolean

        }
        2DComponent --|> Component
    }
    UI *-- 2DComponent
}
package entity{
    abstract class Entity #888888{
        + Entity(Point3D):Entity
        ==
        - id:String
        + getId():String
        --
        # position:Point3D
        + getPosition():Point3D
        --
        # collisionBox:CollisionBox
        + getCollisionBox():CollisionBox
        --
        # component:Component
        # {abstract} buildComponent():Component
        + getComponent():Component
        --
        # update(double):void
        # fall():void
        # correctCollisions():void
        --
        onMouseEntered(MouseEvent):void
        onMouseExit(MouseEvent):void
    }
    Model "1" *-- "n" Entity
    'Entity <-- Component
}
@enduml