@startuml human
class Lï¿½gende{
    - private
    # protected
    + public
    {abstract} abstract
    {static} static
}
package entity{
    interface 2DComponentOwner{
        + build2DComponent():2DComponent
    }
    abstract class Entity #888888{
        + Entity(Point3D):Entity
        ==
        - id:String
        + getId():String
        --
        # position:Point3D
        + getPosition():Point3D
        --
        # collisionBox:CollisionBox
        + getCollisionBox():CollisionBox
        --
        # component:Component
        # {abstract} buildComponent():Component
        + getComponent():Component
        --
        # update(double):void
        # fall():void
        # correctCollisions():void
        --
        onMouseEntered(MouseEvent):void
        onMouseExit(MouseEvent):void
    }
    package entity.item{
        class Inventory{
            - items:Hashtable<String,Item>
            + getItems():Hashable<String,Item>
            --
            + addItem(Item):void
            + getItem(String):Item
            + removeItem(String):void
            'the following function removes the Item
            'with the specified Id and returns it to the user.
            + popItem(String):Item
            'calls the onItemTraded() method on the target inventory and replaces the item in this inventory 
            + tradeItem(Item, String, Inventory):Item
            + onItemTraded(Item):Item
        }
    }
    package entity.living{
        abstract class LivingEntity{
            # hp:double
            # xpReward:double
            ==
            # move():void
            + getAttacked(double, LivingEntity):void
            # onDeath():void
            # jump():void
            ==
            # setUp(boolean):void
            # setDown(boolean):void
            # setLeft(boolean):void
            # setRight(boolean):void
        }
        LivingEntity --|> Entity
        interface UserControllable{
            + onMouseMoved(MouseEvent):void
            + onKeyPressed(KeyEvent):void
        }
        package entity.living.human{
            abstract class Human{
                - Level:int
                + getLevel():int
                + stats:Hashtable<String, double>
                + itemsStatModifiers:Hashtable<String, double>
                ==
                + tradeItem(Item, Human):Item
                ==
                - wornItems:ArrayList<Item>
                + getWornItems():ArrayList<Item>
                --
                - currentWeapon:Weapon
                + getCurrentWeapon():Weapon
            }
            Human --|> LivingEntity
            Human <-- Inventory
            Human --|> 2DComponentOwner
            class Player{
                
            }
            Player --|> Human
            Player --|> UserControllable
            class Npc{
                - publiclyShownItems:ArrayList<Item>
                + getFriendliness(Human):double
                + getPubliclyShownItems():ArrayList<Item>
                # choosePubliclyShownItems():ArrayList<Item>
            }
            Npc --|> Human
        }
        package entity.living.animal{
            
        }
    }
}
'package javafx{
'    package javafx.scene{
'        class Group
'    }
'}
'package visual{
'    package visual.component{
'        class Component{
'            - id:string
'            + Component(String):Component
'            + getId():String
'        }
'        Component --|> Group
'    }
'    package visual.info{
'        class InfoPane{
'            - visible:boolean
'            + isVisible():boolean
'
'        }
'        InfoPane --|> Group
'    }
'}
@enduml